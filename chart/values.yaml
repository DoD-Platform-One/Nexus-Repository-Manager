# -- Big Bang Additions
hostname: nexus
domain: bigbang.dev
istio:
  enabled: false
  nexus:
    gateways:
    - "istio-system/main"
    hosts:
    - "{{ .Values.hostname }}.{{ .Values.domain }}"

networkPolicies:
  enabled: false
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway

monitoring:
  enabled: false
license_key: ""
license:
  mountPath: /nexus-data/sonatype-license.lic
  subPath: sonatype-license.lic
sso:
  enabled: false
  idp_data:
    entityId: ""
    usernameAttribute: ""
    firstNameAttribute: ""
    lastNameAttribute: ""
    emailAttribute: ""
    groupsAttribute: ""
    validateResponseSignature: true
    validateAssertionSignature: true
    idpMetadata: ''
  realm:
    - "NexusAuthenticatingRealm"
    - "NexusAuthorizingRealm"
    - "SamlRealm"
  role:
    - id: "nexus"
      name: "nexus"
      description: "nexus group"
      privileges:
        - "nx-all"
      roles:
        - "nx-admin"

proxy:
  enabled: false
  request:
    tid: 1
    action: coreui_HttpSettings
    method: update
    type: rpc
    data:
    - userAgentSuffix: ~
      timeout: ~
      retries: ~
      httpEnabled: false
      httpHost: ~
      httpPort: ~
      httpAuthEnabled: ~
      httpAuthUsername: ~
      httpAuthPassword: ~
      httpAuthNtlmHost: ~
      httpAuthNtlmDomain: ~
      httpsEnabled: false
      httpsHost: ~
      httpsPort: ~
      httpsAuthEnabled: ~
      httpsAuthUsername: ~
      httpsAuthPassword: ~
      httpsAuthNtlmHost: ~
      httpsAuthNtlmDomain: ~
      nonProxyHosts: []

job_image:
  repository: registry1.dso.mil/ironbank/redhat/ubi/ubi8-minimal
  tag: 8.5
  pullPolicy: IfNotPresent

# -- End of BigBang Additions

ingress:
  enabled: false
  annotations: {kubernetes.io/ingress.class: nginx}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hostPath: /
  hostRepo: repo.demo
  tls: []
    # - secretName: nexus-local-tls
    #   hosts:
    #     - nexus.local
    #     - nexus-docker.local
    #     - nexus-docker-hosted.local

statefulset:
  # This is not supported
  enabled: false
# By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25% . you can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
deploymentStrategy: Recreate
image:
  # IB Nexus Image
  repository: registry1.dso.mil/ironbank/sonatype/nexus/nexus
  tag: 3.37.3-02
  pullPolicy: IfNotPresent

nexus:
  extraLabels:
    app: nexus-repository-manager
  docker:
    enabled: false
    registries: []
    #  - host: chart.local
    #    port: 5000
    #    secretName: registrySecret
  env:
    # the correct env variable name is all caps with underscores: https://github.com/sonatype/helm3-charts/pull/81
    # the upstream values file has wrong env name
    - name: INSTALL4J_ADD_VM_PARAMS
      # using values based on 8GB of RAM on host: https://help.sonatype.com/repomanager3/installation/system-requirements
      # info about fips option: https://access.redhat.com/documentation/en-us/openjdk/8/pdf/configuring_openjdk_8_on_rhel_with_fips/openjdk-8-configuring_openjdk_8_on_rhel_with_fips-en-us.pdf
      value: "-Dcom.redhat.fips=false -Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.util.prefs.userRoot=/nexus-data/javaprefs"
    - name: NEXUS_SECURITY_RANDOMPASSWORD
      value: "true"
  properties:
    override: false
    data: {}
    #   nexus.licenseFile: /nexus-data/sonatype-license.override.lic
    #   nexus.scripts.allowCreation: true
    #   See this article for ldap configuratioon options https://support.sonatype.com/hc/en-us/articles/216597138-Setting-Advanced-LDAP-Connection-Properties-in-Nexus-Repository-Manager
    #   nexus.ldap.env.java.naming.security.authentication: simple
  # nodeSelector:
  #   cloud.google.com/gke-nodepool: default-pool
  resources:
    # requests:
    # Based on https://help.sonatype.com/repomanager3/installation/system-requirements
    requests:
      cpu: 4
      memory: 8000Mi
    limits:
      cpu: 4
      memory: 8000Mi

  repository:
    # Raw format Repositories are currently the only supported format.
    enabled: false
    repo:
      - name: "test-nexus"
        format: "raw"
        type: "hosted"
        repo_data:
          name: "test-nexus"
          online: true
          storage:
            blobStoreName: "default"
            strictContentTypeValidation: true
            writePolicy: "allow_once"
          cleanup:
            policyNames:
              - "string"
          component:
            proprietaryComponents: true
          raw:
            contentDisposition: "ATTACHMENT"

  affinity: {}
  # The ports should only be changed if the nexus image uses a different port
  nexusPort: 8081

  securityContext:
    fsGroup: 2000
  podAnnotations: {}
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 6
    timeoutSeconds: 10
    path: /
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 6
    timeoutSeconds: 10
    path: /
  # hostAliases allows the modification of the hosts file inside a container
  hostAliases: []
  # - ip: "192.168.1.10"
  #   hostnames:
  #   - "example.com"
  #   - "www.example.com"


  imagePullSecrets:
    - name: private-registry

nameOverride: ""
fullnameOverride: ""

deployment:
  # # Add annotations in deployment to enhance deployment configurations
  annotations: {}
  # # Add init containers. e.g. to be used to give specific permissions for nexus-data.
  # # Add your own init container or uncomment and modify the given example.
  initContainers:
  # - name: fmp-volume-permission
    # image: busybox
    # imagePullPolicy: IfNotPresent
    # command: ['chown','-R', '200', '/nexus-data']
    # volumeMounts:
      # - name: nexus-data
        # mountPath: /nexus-data
  # # Uncomment and modify this to run a command after starting the nexus container.
  postStart:
    command:    # '["/bin/sh", "-c", "ls"]'
  preStart:
    command:    # '["/bin/rm", "-f", "/path/to/lockfile"]'
  terminationGracePeriodSeconds: 120
  additionalContainers:
  additionalVolumes:
  additionalVolumeMounts:


ingress:
  enabled: false
  annotations: {kubernetes.io/ingress.class: nginx}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hostPath: /
  hostRepo: repo.demo
  tls: []
    # - secretName: nexus-local-tls
    #   hosts:
    #     - nexus.local
    #     - nexus-docker.local
    #     - nexus-docker-hosted.local


service:
  name: nexus3
  enabled: true
  labels: {}
  annotations: {}
  type: ClusterIP


route:
  enabled: false
  name: docker
  portName: docker
  labels:
  annotations:
  # path: /docker

nexusProxyRoute:
  enabled: false
  labels:
  annotations:
  # path: /nexus

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  ## If defined, storageClass: <storageClass>
  ## If set to "-", storageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClass spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # existingClaim:
  # annotations:
  #  "helm.sh/resource-policy": keep
  # storageClass: "-"
  storageSize: 8Gi
  # If PersistentDisk already exists you can create a PV for it by including the 2 following keypairs.
  # pdName: nexus-data-disk
  # fsType: ext4

tolerations: []

# # Enable configmap and add data in configmap
config:
  enabled: false
  mountPath: /sonatype-nexus-conf
  data: []

# # To use an additional secret, set enable to true and add data
secret:
  enabled: true
  mountPath: /nexus-data/admin.password
  subPath: admin.password
  readOnly: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

psp:
  create: false

openshift: false

{{- if and .Values.sso.enabled .Values.secret.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
  creationTimestamp: null
  name: saml
spec:
  template:
    metadata:
      creationTimestamp: null
    spec:
      activeDeadlineSeconds: 90
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8}}
      {{- end }}
      {{- if .Values.nexus.securityContext }}
      securityContext:
        {{ toYaml .Values.nexus.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.job_image.repository }}:{{ .Values.job_image.tag }}"
        imagePullPolicy: {{ .Values.job_image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.nexus.containerSecurityContext | nindent 10 }}
        name: saml
        command:
          - sh
        args:
          - -c
          - |
            BASE_URL="http://{{ include "nexus.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.nexus.nexusPort }}"
            # If there is a license key
            {{- if .Values.license_key }}
            # saml metadata
            curl --retry-delay 5 --retry-max-time 60 --retry 10 --retry-connrefused -X PUT \
                 -u admin:"$API_CREDENTIALS" \
                 "$BASE_URL/service/rest/v1/security/saml" \
                 -H "accept: application/json" \
                 -H "Content-Type: application/json" \
                 -d "$IDP_DATA" &&
            {{- end }}
            # role creation
            {{- range .Values.sso.role }}
            curl --retry-delay 5 --retry-max-time 60 --retry 10 --retry-connrefused -X POST \
                 -u admin:"$API_CREDENTIALS" \
                 "$BASE_URL/service/rest/v1/security/roles" \
                 -H "accept: application/json" \
                 -H "Content-Type: application/json" \
                 -d {{ . | toJson | quote }} &&
            {{- end }} 

            echo "Created roles"
            exit
        
        env:
        - name: API_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: {{ template "nexus.name" . }}-secret
              key: admin.password
        - name: IDP_DATA
          valueFrom:
            configMapKeyRef:
              name: {{ template "nexus.name" . }}-sso
              key: idp-metadata
        - name: ROLE
          valueFrom:
            configMapKeyRef:
              name: {{ template "nexus.name" . }}-sso
              key: role
        resources: {}
      restartPolicy: Never
status: {}
{{- end }}
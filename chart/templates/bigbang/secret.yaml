{{- if .Values.secret.enabled -}}

{{- $nexusAdminPass := (include "nexus.defaultAdminPassword" . | b64enc ) }}

{{- if and .Release.IsUpgrade (not .Values.custom_admin_password) }}
{{- $adminPassSecret := (lookup "v1" "Secret" .Release.Namespace (print (include "nexus.name" .) "-secret")) }}
{{- $nexusAdminPass = (dig "data" "admin.password"  $nexusAdminPass $adminPassSecret) }}
{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ template "nexus.name" . }}-secret
  labels:
{{ include "nexus.labels" . | indent 4 }}
{{- if .Values.nexus.extraLabels }}
  {{- with .Values.nexus.extraLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
data:
  admin.password: {{ $nexusAdminPass }}
  admin.username: YWRtaW4=
{{- end }}
{{- if and .Values.monitoring.enabled .Values.monitoring.serviceMonitor.createMetricsUser -}}

{{- $nexusMetricsPass := (default (randAlphaNum 12) .Values.custom_metrics_password) | b64enc }}

{{- if and .Release.IsUpgrade (not .Values.custom_metrics_password) }}
{{- $metricsPassSecret := (lookup "v1" "Secret" .Release.Namespace (print (include "nexus.name" .) "-metrics-secret")) }}
{{- $nexusMetricsPass = (dig "data" "metrics.password" $nexusMetricsPass $metricsPassSecret) }}
{{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "nexus.name" . }}-metrics-secret
  labels:
{{ include "nexus.labels" . | indent 4 }}
{{- if .Values.nexus.extraLabels }}
  {{- with .Values.nexus.extraLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
data:
  metrics.password: {{ $nexusMetricsPass }}
  metrics.username: {{ "metrics" | b64enc  }}
{{- end }}

---
{{- if .Values.nexus.blobstores.enabled }}
  {{- range $n, $blobstore := .Values.nexus.blobstores.blobstore }}
apiVersion: v1
kind: Secret
metadata:
  name: nexus-blobstore-data-{{ $n }}
  labels:
    app: nexus-repository-manager
type: Opaque
data:
  # NOTE: We pass through the *entire* blobstore_data payload here so that
  # end users can update their .blobstores.blobstore_data entries to fit
  # whichever nexus blobstore type they're trying to hit (s3 / azure / file)
  #
  # NOTE: this also provides a clean way to store the user's cloud credentials
  # from within .blobstore_data without worrying about them leaking into
  # the blobstore Job spec.
  blobstore_data: {{ .blobstore_data | toJson | b64enc }}
  {{- end }}
{{- end }}

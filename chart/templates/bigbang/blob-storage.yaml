{{- if .Values.nexus.blobstores.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
  creationTimestamp: null
  name: blobstorage
spec:
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/part-of: nexus-repository-manager
        job-name: blobstorage
    spec:
      activeDeadlineSeconds: 90
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8}}
      {{- end }}
      {{- if .Values.nexus.securityContext }}
      securityContext:
        {{ toYaml .Values.nexus.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.job_image.repository }}:{{ .Values.job_image.tag }}"
        imagePullPolicy: {{ .Values.job_image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.nexus.containerSecurityContext | nindent 10 }}
        name: blobstorage
        command:
          - sh
        args:
          - -c
          - |
            failure() {
              local lineno=$1
              local msg=$2
              echo "A command failed at $lineno."
            }
            trap 'failure ${LINENO} "$BASH_COMMAND"' ERR

            BASE_URL="http://{{ include "nexus.fullname" . }}:{{ .Values.nexus.nexusPort }}"

            ## wait for nexus web service to start responding
            echo "Check to see if Nexus API service is ready..."
            until curl -s --head "${BASE_URL}/service/rest/v1/status"; do
              echo "Waiting for nexus web server to start passing status check..."
              sleep 10
            done
            echo "Nexus API server status check passed."

            set -euo pipefail

            # blobstore creation
            {{- range $n, $blobstore := .Values.nexus.blobstores.blobstore }}
            {{- with $blobstore }}
            echo "Checking to see if {{ .type }} blobstore {{ .name }} already exists..."
            STATUS=$(curl -X GET -s -o /dev/null -w '%{http_code}' \
              -u admin:"$API_CREDENTIALS" \
              "$BASE_URL/service/rest/v1/blobstores/{{- .type }}/{{- .name }}" \
              -H "accept: application/json" \
              -H "Content-Type: application/json" \
            )
            if [ $STATUS -eq 200 ]
            then
              curl -s --retry-delay 5 --retry-max-time 60 --retry 10 --retry-connrefused -X PUT --fail \
                -u admin:"$API_CREDENTIALS" \
                "$BASE_URL/service/rest/v1/blobstores/{{- .type }}/{{- .name }}" \
                -H "accept: application/json" \
                -H "Content-Type: application/json" \
                -d @<(echo "${BLOBSTORE_DATA_SECRET_{{ $n }}}")
              echo "Update successful for {{ .name }}."
            else
              echo "Attempting to create new {{ .type }} blobstore {{ .name }}..."
              echo "${BLOBSTORE_DATA_SECRET_{{ $n }}}"
              curl -s --retry-delay 5 --retry-max-time 60 --retry 10 --retry-connrefused -X POST --fail \
                -u admin:"$API_CREDENTIALS" \
                "$BASE_URL/service/rest/v1/blobstores/{{- .type }}" \
                -H "accept: application/json" \
                -H "Content-Type: application/json" \
                -d @<(echo "${BLOBSTORE_DATA_SECRET_{{ $n }}}")
              echo "Create successful for {{ .name }}."
            fi
            {{- end }}
            {{- end }}
            echo "Created blobstores."

            exit
        env:
        - name: API_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: {{ template "nexus.name" . }}-secret
              key: admin.password
        {{- range $n, $blobstore := .Values.nexus.blobstores.blobstore }}
        - name: "BLOBSTORE_DATA_SECRET_{{ $n }}"
          valueFrom:
            secretKeyRef:
              name: nexus-blobstore-data-{{ $n }}
              key: blobstore_data
        {{- end }}
        resources: {}
      restartPolicy: Never
status: {}
{{- end }}
